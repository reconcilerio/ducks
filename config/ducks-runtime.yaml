# Copyright 2025 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
    control-plane: controller-manager
  name: reconcilerio-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: ducktypes.duck.reconciler.io
spec:
  group: duck.reconciler.io
  names:
    kind: DuckType
    listKind: DuckTypeList
    plural: ducktypes
    singular: ducktype
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: DuckType is the Schema for the ducktypes API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DuckTypeSpec defines the desired state of DuckType.
            properties:
              group:
                description: |-
                  Group is the API group of the defined custom resource.
                  Must match the name of the DuckType (in the form `<plural>.<group>`).
                type: string
              kind:
                description: |-
                  Kind is the serialized kind of the resource. It is normally CamelCase and singular.
                  Custom resource instances will use this value as the `kind` attribute in API calls.
                type: string
              listKind:
                description: ListKind is the serialized kind of the list for this
                  resource. Defaults to "<kind>List".
                type: string
              plural:
                description: |-
                  Plural is the plural name of the resource to serve.
                  Must match the name of the DuckType (in the form `<plural>.<group>`).
                  Must be all lowercase.
                type: string
              singular:
                description: Singular is the singular name of the resource. It must
                  be all lowercase. Defaults to lowercased `kind`.
                type: string
            required:
            - group
            - kind
            - plural
            type: object
          status:
            description: DuckTypeStatus defines the observed state of DuckType.
            properties:
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the resource that
                  was last processed by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-controller-manager
  namespace: reconcilerio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-leader-election-role
  namespace: reconcilerio-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-ducktype-admin-role
rules:
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypees
  verbs:
  - '*'
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-ducktype-editor-role
rules:
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-ducktype-viewer-role
rules:
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reconcilerio-ducks-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes/finalizers
  verbs:
  - update
- apiGroups:
  - duck.reconciler.io
  resources:
  - ducktypes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reconcilerio-ducks-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reconcilerio-ducks-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-leader-election-rolebinding
  namespace: reconcilerio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reconcilerio-ducks-leader-election-role
subjects:
- kind: ServiceAccount
  name: reconcilerio-ducks-controller-manager
  namespace: reconcilerio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: reconcilerio-ducks-controller-manager
  namespace: reconcilerio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: reconcilerio-ducks-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: reconcilerio-ducks-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: reconcilerio-ducks-controller-manager
  namespace: reconcilerio-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
    control-plane: controller-manager
  name: reconcilerio-ducks-controller-manager-metrics-service
  namespace: reconcilerio-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: ducks
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-webhook-service
  namespace: reconcilerio-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: ducks
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
    control-plane: controller-manager
  name: reconcilerio-ducks-controller-manager
  namespace: reconcilerio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ducks
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: ducks
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        image: ko://reconciler.io/ducks/cmd
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: reconcilerio-ducks-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-metrics-certs
  namespace: reconcilerio-system
spec:
  dnsNames:
  - reconcilerio-ducks-controller-manager-metrics-service.reconcilerio-system.svc
  - reconcilerio-ducks-controller-manager-metrics-service.reconcilerio-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: reconcilerio-ducks-selfsigned-issuer
  secretName: metrics-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-serving-cert
  namespace: reconcilerio-system
spec:
  dnsNames:
  - reconcilerio-ducks-webhook-service.reconcilerio-system.svc
  - reconcilerio-ducks-webhook-service.reconcilerio-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: reconcilerio-ducks-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ducks
  name: reconcilerio-ducks-selfsigned-issuer
  namespace: reconcilerio-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: reconcilerio-system/reconcilerio-ducks-serving-cert
  name: reconcilerio-ducks-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: reconcilerio-ducks-webhook-service
      namespace: reconcilerio-system
      path: /validate-duck-reconciler-io-v1-ducktype
  failurePolicy: Fail
  name: v1.ducktypes.duck.reconciler.io
  rules:
  - apiGroups:
    - duck.reconciler.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ducktypes
  sideEffects: None
